services:
  # Database Service (PostgreSQL)
  db:
    image: postgres:latest
    container_name: any_song_postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-anysong_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-anysong_password}
      POSTGRES_DB: ${POSTGRES_DB:-anysong_db}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - anysong-network

  # Frontend Service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      no_cache: false
      args:
        - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
        - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
        - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
        - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
        - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
        - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
        - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
      - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    depends_on:
      - backend
    networks:
      - anysong-network

  # Backend Service (Go)
  backend:
    container_name: any_song_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DB_HOST=db
      - DB_NAME=${POSTGRES_DB:-anysong_db}
      - DB_USER=${POSTGRES_USER:-anysong_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-anysong_password}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - FIREBASE_CREDENTIALS_PATH=${FIREBASE_CREDENTIALS_PATH:-config/anysong-2025-firebase-adminsdk-fbsvc-a19a4428fe.json}
    depends_on:
      - db
    networks:
      - anysong-network

networks:
  anysong-network:
    driver: bridge

volumes:
  frontend_node_modules:
  frontend_next:
  postgres_data:
